{
  "hash": "2c76e5eb994842d47e7808a24ec4bd35",
  "result": {
    "markdown": "---\ntitle: \"Class Project 2\"\nauthor: \"Erika Nagai\"\ndesription: \"Class Project 2\"\ndate: \"08/15/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - final project\n  - Erika Nagai\n  - dplyr\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\n#install.packages(\"gridExtra\")\nlibrary(gridExtra)\nlibrary(AER)\nlibrary(stargazer)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Overview:\n\nThis analysis was done for in-class assignment for DACSS 603 Introduction to Quantitative Analysis at the University of Massachusetts, Amherst.\n\nMy analysis is about Japanese moviegoers' behavior and trend over last 20 years. As this article (https://www.washingtonpost.com/business/avatar-struggles-show-how-japan-is-ditching-hollywood/2022/12/22/09197536-8234-11ed-8738-ed7217de2775_story.html) suggests, recent Hollywood movies are struggling in Japanese market. This might suggest that Japanese people are favoring domestic movies because they are getting more close-minded or Japanese movie industry is getting mature and more attractive for Japanese audience.\n\nMy research questions are:\n\nHow has Japanese moviegoers' behavior changed over 20 years?\n\nWhat kind of movies attract Japanese movies?\n\n## Dataset\n\nI used two datasets from two different sources.\n\n1.  By-year dataset (year) I gathered the data about general information (total box office revenue, total \\# of people who went to movie theaters, \\# of screens) of every year from 2000 to 2022. (http://www.eiren.org/statistics_e/index.html)\n\n2.  By-movie dataset ('ranking') I gathered the data of Top 100 movies in box office revenue in Japan for the last 20 years (2002-2022) by scraping data available on Box Office Mojo by IMDbPro (https://www.boxofficemojo.com/year/2022/?area=JP&grossesOption=totalGrosses&sort=rank&sortDir=asc) \\* 2022 should be changed to the year you want to refer to.\n\nThen, I added more detailed information about the movies using the dataset of movies available on TMdb (https://www.kaggle.com/datasets/akshaypawar7/millions-of-movies) as of July 14th, 2023 to complement useful information on movies' language and genres.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyear <- read_csv(\"data_ErikaNagai/revised_year.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 23 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(15): ...1, year, total_screens, jp_movies, foreign_movies, total_movies...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nranking <- read_csv(\"data_ErikaNagai/merged_ranking.csv\") %>% \n  filter(rank <=100) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3463 Columns: 35\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (17): original_title, release_date, distributor, revised_release_date, r...\ndbl (17): year, rank, gross, total_gross, order, release_year, id, JP_releas...\nlgl  (1): re_released\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nranking$anime <- as.factor(ranking$anime)\n```\n:::\n\n\n## Exploratory Analysis\n\n## Instructions by Professor Abbas:\n\n1.  **Write down multiple regression models as discussed in the lab. Please view the recordings for instructions on multicollinearity checks and OVB reduction as it pertains to model specification.**\n\nAs explained in the 'draft_final_project' file, 2008 marked a big shift in the Japanese moviegoers' trend because before 2008 foreign movies made more box office revenue in Japan than Japanese movies and after that the situation reversed and Japanese movies started making more revenue in Japan than foreign movies. Thus, I divided the data into two (2002-2007 vs. 2008-2020).\n\n**Multicollinearity:** No concern because there is only one numeric variable (global revenue)\n\n**Omitted Variable Bias:** I added a new column \"anime\", which indicates if the movie is animation or not, because many Japanese movies tend to have an animation format.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# There are around 400 movies that don't have global revenue data. To avoid errors, convert NA to \"0\"\n\nranking[\"global_revenue\"][is.na(ranking[\"global_revenue\"])] <- 0\n\n# variables that will be used in regression models\n\nranking$jp_revenue <- ranking$gross\nranking$world_revenue <- ranking$global_revenue\nranking$world_revenue_squared <- (ranking$global_revenue) ^2\nranking$world_revenue_cubic <- (ranking$global_revenue) ^3\nranking$world_revenue_log <- log(ranking$global_revenue)\nranking$after_2008 <- case_when(\n  ranking$year <= 2007 ~ 0,\n  TRUE ~ 1\n)\n\nranking\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,100 × 41\n    year  rank original_title   gross total_gross release_date distributor order\n   <dbl> <dbl> <chr>            <dbl>       <dbl> <chr>        <chr>       <dbl>\n 1  2002     1 Star Wars: Epi… 7.82e7    78182528 13-Jul       -               1\n 2  2002     2 Monsters, Inc.  7.44e7    74437612 2-Mar        -               1\n 3  2002     3 The Lord of th… 6.91e7    69140370 2-Mar        -               1\n 4  2002     4 Harry Potter a… 6.76e7   142786414 23-Nov       -               1\n 5  2003     7 Harry Potter a… 3.49e7   142786414 23-Nov       -               2\n 6  2002     5 Spider-Man      5.89e7    58925689 11-May       -               1\n 7  2002     6 The Cat Returns 5.06e7    50590057 20-Jul       -               1\n 8  2002     7 Harry Potter a… 4.85e7   152993493 1-Dec        -               1\n 9  2002     8 Ocean's Eleven  3.99e7    51987627 2-Feb        -               1\n10  2002     9 Men in Black II 2.81e7    28136247 6-Jul        -               1\n# ℹ 2,090 more rows\n# ℹ 33 more variables: revised_release_date <chr>, release_year <dbl>,\n#   revised_title <chr>, re_released <lgl>, id <dbl>, JP_release_date <chr>,\n#   JP_release_year <dbl>, id_movies <dbl>, id_tmdb <dbl>, title <chr>,\n#   genres <chr>, original_language <chr>, overview <chr>, popularity <dbl>,\n#   production_companies <chr>, budget <dbl>, global_revenue <dbl>,\n#   runtime <dbl>, status <chr>, tagline <chr>, vote_average <dbl>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# model1 <- lm(jp_revenue ~ region + anime + world_revenue, data = ranking)\n# model2 <- lm(jp_revenue ~ region + anime + world_revenue + world_revenue_squared, data = ranking)\n# model3 <- lm(jp_revenue ~ region + anime + world_revenue + world_revenue_squared + world_revenue_cubic, data = ranking)\n# model5 <- lm(jp_revenue ~ region + anime + world_revenue + region*anime, data = ranking)\n# model6 <- lm(jp_revenue ~ region + anime + world_revenue + after_2008 + region*after_2008 + anime*after_2008 + world_revenue*after_2008, data = ranking)\n# model7 <- lm(jp_revenue ~ region + anime + world_revenue + after_2008 + region*after_2008 + anime*after_2008 + world_revenue*after_2008 + region*anime*after_2008, data = ranking)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# rob_se <- list(sqrt(diag(vcovHC(model1, type = \"HC1\"))),\n#                # sqrt(diag(vcovHC(model2, type = \"HC1\"))),\n#                # sqrt(diag(vcovHC(model3, type = \"HC1\"))),\n#                sqrt(diag(vcovHC(model5, type = \"HC1\"))),\n#                sqrt(diag(vcovHC(model6, type = \"HC1\"))),\n#                sqrt(diag(vcovHC(model7, type = \"HC1\")))\n#                )\n\n# stargazer(model1, model5, model6, model7,\n# title = \"Regressions Using data\",\n# digits = 3,\n# header = FALSE,\n# se = rob_se,\n# object.names = TRUE,\n# model.numbers = FALSE,\n# column.labels = c(\"(I)\", \"(V)\", \"(VI)\", \"(VII)\"),\n# type = \"text\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "53612bf1c9188f20fd5d7b4ffe7ae32b",
  "result": {
    "markdown": "---\ntitle: \"Class Project 1\"\nauthor: \"Erika Nagai\"\ndesription: \"First iteration of the class project\"\ndate: \"07/18/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - final project\n  - Erika Nagai\n  - dplyr\n  \n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n## Instructions\n\n1. Import data into R and load the `dplyr` package to perform the following descriptive analysis on the two variables you are working with:\n    \n    i) Start by first [plotting]{.underline} the probability as well as cumulative density functions for each of your variables as shown in chapter 2. Instead of using sample() to generate a vector of probabilities, designate ‘probability’ to be the observations in your dataset. You may search online for simple ways to generate these plots for you data.\n    \n    ii) Group data by the two variables of interest to you (and relevance to the phenomenon you are interested in exploring) and obtain mean and standard deviation for at least one of the variables like in the example below. Please also print your results, as they will be important for your final writeup. \n    \n    ![](images_Qasim/image1.png){fig-align=\"center\"}\n    \n    iii) Split both of your variables like illustrated in the example below. You may use ‘greater than’ or ‘less than’ signs to split your data\n    \n    ![](images_Qasim/image2.png){fig-align=\"center\"}\n    \n    iv) Rename columns according to the splits you’ve made and obtain difference in means along with standard errors and confidence intervals like so:\n    \n    ![](images_Qasim/image3.png){fig-align=\"center\"}\n    \n    v) Now generate a plot by first designating X and Y according to the variable you would assign as an independent variable (regressor or X) and which one as a dependent variable (Y) like so:\n    \n    ![](images_Qasim/image4.png){fig-align=\"center\"}\n    \n2. Carry out simple regression analysis that employs lm() function to generate results for the analysis\n\n    i) Generate plot that regresses you X variable on Y. Fit a line through the observations to capture the systematic relationship:\n    \n     ![](images_Qasim/image5.png){fig-align=\"center\"}\n\n## Overview:\n\nThis analysis was done for in-class assignment for DACSS 603 Introduction to Quantitative Analysis at the University of Massachusetts, Amherst.\n\nMy analysis is about Japanese moviegoers' behavior and trend over last 20 years. As this article (https://www.washingtonpost.com/business/avatar-struggles-show-how-japan-is-ditching-hollywood/2022/12/22/09197536-8234-11ed-8738-ed7217de2775_story.html) suggests, recent Hollywood movies are struggling in Japanese market. This might suggest that Japanese people are favoring domestic movies because they are getting more close-minded or Japanese movie industry is getting mature and more attractive for Japanese audience.\n\nMy research questions are:\n\n1.  How has Japanese moviegoers' behavior changed over 20 years?\n2.  What kind of movies attract Japanese people?\n\n## Dataset\n\nI gathered the data of the movies that were among top 130 in box office revenue in Japan for the last 20 years (2002-2022) by scraping data available on Box Office Mojo by IMDbPro (https://www.boxofficemojo.com/year/2022/?area=JP&grossesOption=totalGrosses&sort=rank&sortDir=asc) \\* 2022 should be changed to the year you want to refer to.\n\nBesides, I used the dataset (https://www.kaggle.com/datasets/akshaypawar7/millions-of-movies) as of July 14th, 2023 to complement useful information on movies' language and genres.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(dplyr)\nlibrary(ggplot2)\n#install.packages(\"tidyverse\")\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in data\ndf <- read_csv(\"data_ErikaNagai/movies_update.csv\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: 'data_ErikaNagai/movies_update.csv' does not exist in current working directory ('C:/Users/Microsoft/Desktop/603_Summer2023_Sec_1/posts').\n```\n:::\n\n```{.r .cell-code}\ndf <- df %>% arrange(total_gross)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in UseMethod(\"arrange\"): no applicable method for 'arrange' applied to an object of class \"function\"\n```\n:::\n\n```{.r .cell-code}\nsummary(df)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in object[[i]]: object of type 'closure' is not subsettable\n```\n:::\n:::\n\n\n## EDA (1st Homework)\n\nThis dataset contains 3219 rows (movies) that were among top 148 movies with the highest box office revenues in Japan every year between 2002 and 2022.\n\nIt contains basic information about movies such as total gross box office revenue, release date in Japan, original language, genres, and some movies have their tagline as well\n\n**Instruction a**. Start by first plotting the probability as well as cumulative density functions for each of your variables as shown in chapter 2. Instead of using sample() to generate a vector of probabilities, designate 'probability' to be the observations in your dataset. You may search online for simple ways to generate these plots for you data.\n\nThe below is a probability of a movie having a specific value. As the probability of a moving having a specific value is quite low (close to 0), the plot looks flat.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# probability density of Box Office revenue in Japan \n\n\nprobability <- rep(1/3219, 3219)\n\nplot(x = df$total_gross,\n     y = probability,\n     main = 'Probability Distribution Function',\n     xlab = 'Total Box Office Revenue in Japan (USD)',\n     ylab = 'Probability')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in df$total_gross: object of type 'closure' is not subsettable\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncum_probability <- cumsum(probability)\nplot(x = df$total_gross,\n     y = cum_probability,\n     main = 'Cumulative Probability Distribution Function',\n     xlab = 'Total Box Office Revenue in Japan (USD)',\n     ylab = 'Cumulative Probability')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in df$total_gross: object of type 'closure' is not subsettable\n```\n:::\n:::\n\n\n**Instruction b**. Group data by the two variables of interest to you (and relevance to the phenomenon you are interested in exploring) and obtain mean and standard deviation for at least one of the variables like in the example below. Please also print your results, as they will be important for your final writeup.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(summary(df$total_gross))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in df$total_gross: object of type 'closure' is not subsettable\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(sd(df$total_gross))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in df$total_gross: object of type 'closure' is not subsettable\n```\n:::\n:::\n\n\n**Introduction c**. Split both of your variables like illustrated in the example below. You may use 'greater than' or 'less than' signs to split your data\n\n## Statistics description of box office revenue of **foreign movies in Japan**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_foreign <- df %>% \n  filter(region == \"Foreign\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"function\"\n```\n:::\n\n```{.r .cell-code}\nsummary(df_foreign$total_gross)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'df_foreign' not found\n```\n:::\n:::\n\n\nStandard deviation of box office revenue of foreign movies in Japan\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(df_foreign$total_gross)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'df_foreign' not found\n```\n:::\n:::\n\n\n## Statistics description of box office revenue of **domestic movies in Japan**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_domestic <- df %>% \n  filter(region == \"Japan\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"function\"\n```\n:::\n\n```{.r .cell-code}\nsummary(df_domestic$total_gross)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'df_domestic' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(df_domestic$total_gross)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'df_domestic' not found\n```\n:::\n:::\n\n\n**Instruction d.** Rename columns according to the splits you've made and obtain difference in means along with standard errors and confidence intervals like so:\n\nThe mean of Box Office revenue of domestic movies are bigger than that of foreign movies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Difference in means\ngap_mean <- mean(df_domestic$total_gross) - mean(df_foreign$total_gross)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'df_domestic' not found\n```\n:::\n\n```{.r .cell-code}\ngap_se <- sqrt(df_domestic$total_gross/count(df_domestic) + df_foreign$total_gross/count(df_domestic))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'df_domestic' not found\n```\n:::\n\n```{.r .cell-code}\ngap_ci_l <- gap_mean - 1.96 * gap_se\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'gap_mean' not found\n```\n:::\n\n```{.r .cell-code}\ngap_ci_u <- gap_mean + 1.96 * gap_se\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'gap_mean' not found\n```\n:::\n\n```{.r .cell-code}\nresults = cbind(gap_mean, gap_se, gap_ci_l, gap_ci_u)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'gap_mean' not found\n```\n:::\n\n```{.r .cell-code}\ncolnames(results) <- c(\"gap_mean\", \"gap_se\", \"gap_ci_l\", \"gap_ci_u\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: object 'results' not found\n```\n:::\n\n```{.r .cell-code}\nprint(results)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'results' not found\n```\n:::\n:::\n\n\n**Instruction e.** assign as an independent variable (regressor or X) and which one as a dependent variable (Y) like so:\n\nMy independent variable (foreign/domestic) is a discrete variable, so I used histogram instead to show the difference of distribution between foreign movies and domestic movies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  ggplot(aes(x = total_gross)) +\n  geom_histogram(bins=50, fill='lightblue') +\n  facet_wrap(~region) +\n  labs(title=\"Distribution of Box Office Revenue in Japan\",\n       x = \"Box Office Revenue in Japan (USD\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `ggplot()`:\n! `data` cannot be a function.\nℹ Have you misspelled the `data` argument in `ggplot()`\n```\n:::\n:::\n\n\n**Instruction.** Carry out simple regression analysis that employs lm() function to generate results for the analysis a. Generate plot that regresses you X variable on Y. Fit a line through the observations to capture the systematic relationship:\n\nMy independent variable is discrete so the linear regression (box office revenue \\~ region) used dummy variables.\n\nThis regression model basically shows the mean box office revenue by movie regions (unknown, foreign, japan). On average, both Foreign and Japanese movies are likely to make statistically higher box office revenue than movies whose original region is unknown.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$region <- factor(df$region, levels=c(\"Unknown\", \"Foreign\", \"Japan\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in df$region: object of type 'closure' is not subsettable\n```\n:::\n\n```{.r .cell-code}\nmodel <- lm(df$total_gross~ df$region)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in df$total_gross: object of type 'closure' is not subsettable\n```\n:::\n\n```{.r .cell-code}\nsummary(model)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'model' not found\n```\n:::\n:::\n\n\nSince my independent variable is NOT continuous, it is difficult to plot the regression model. Thus, I prepared the boxplot graph that show the difference in box offixe revenue depending on the regional origin of the movies (Unknown, Foreign, Japan)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(df$total_gross ~ df$region)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in df$total_gross: object of type 'closure' is not subsettable\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  ggplot(aes(x=release_year_JP, y=total_gross, color = region)) +\n  geom_point() +\n  labs(x='Release Year in Japan', y='Total Box Office Revenue in Japan (USD)')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `ggplot()`:\n! `data` cannot be a function.\nℹ Have you misspelled the `data` argument in `ggplot()`\n```\n:::\n:::\n\n\n## Anime \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$anime <- as.factor(df$anime)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in df$anime: object of type 'closure' is not subsettable\n```\n:::\n\n```{.r .cell-code}\ndf %>% \n  ggplot(aes(x=release_year_JP, y=total_gross, color = anime)) +\n  geom_point() +\n  labs(x='Release Year in Japan', y='Total Box Office Revenue in Japan (USD)')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `ggplot()`:\n! `data` cannot be a function.\nℹ Have you misspelled the `data` argument in `ggplot()`\n```\n:::\n:::\n\n\n## Anime X Region\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  ggplot(aes(x=release_year_JP, y=total_gross, color = region, shape = anime)) +\n  geom_point() +\n  labs(x='Release Year in Japan', y='Total Box Office Revenue in Japan (USD)')\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `ggplot()`:\n! `data` cannot be a function.\nℹ Have you misspelled the `data` argument in `ggplot()`\n```\n:::\n:::\n\n# Linear Regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_first_half <- df %>% filter(release_year_JP <= 2011)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"function\"\n```\n:::\n\n```{.r .cell-code}\ndf_second_half <- df %>% filter(release_year_JP >=2012)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"function\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_first_half <- lm(total_gross~region+anime, data = df_first_half)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(mf, parent.frame()): object 'df_first_half' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(lm_first_half)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'lm_first_half' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_second_half <- lm(total_gross~region+anime, data = df_second_half)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(mf, parent.frame()): object 'df_second_half' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(lm_second_half)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'lm_second_half' not found\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
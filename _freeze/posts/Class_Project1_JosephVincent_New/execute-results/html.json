{
  "hash": "def2774a202e95150d0c30254c66a545",
  "result": {
    "markdown": "---\ntitle: \"Class Project 1\"\nauthor: \"Joseph Vincent\"\ndesription: \"First Iteration, Air Quality and Deaths\"\ndate: \"07/16/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - final project\n  - Joseph Vincent\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(lubridate)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Reading, Cleaning and Combining Data Sets\n\nI'm using the CDC's database for Air Quality Measures on the National Environmental Health Tracking Network, a dataset from the state of California's Department of Health and Human Services (HHS) on annual number of deaths by county, and per-county population data from the United States Census Bureau.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#reading in air quality data\nairquality <- read_csv(\"Final Project Data/Air_Quality_Measures_on_the_National_Environmental_Health_Tracking_Network.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 218635 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): MeasureName, MeasureType, StratificationLevel, StateName, CountyNam...\ndbl (6): MeasureId, StateFips, CountyFips, ReportYear, Value, MonitorOnly\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#reading in deaths dataset\ncalideaths <- read_csv(\"Final Project Data/2021-05-14_deaths_final_1999_2013_county_year_sup.csv\") %>%\n  #filtering for occurrence deaths (i.e. all deaths that occurred, disregarding residence)\n  filter(Geography_Type == \"Occurrence\") %>%\n  #de-selecting geography type as they are now all occurrence\n  select(-Geography_Type)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 292320 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): County, Geography_Type, Strata, Strata_Name, Cause, Cause_Desc, Ann...\ndbl (3): Year, Count, Annotation_Code\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#reading in population data\npopulations <- read_csv(\"Final Project Data/co-est00int-tot.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3194 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): STNAME, CTYNAME\ndbl (18): SUMLEV, REGION, DIVISION, STATE, COUNTY, ESTIMATESBASE2000, POPEST...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#cleaning air quality data\nairqualitycali <- airquality %>%\n  #arranging by year\n  arrange(`ReportYear`) %>%\n  #filtering for california only and 2000-2010\n  filter(StateName == \"California\" & `ReportYear` %in% c(2000:2010)) %>%\n  #selecting only relevant columns\n  select(CountyName, ReportYear, MeasureName, Value) %>%\n  #renaming county and year to be consistent with deaths dataset\n  rename(\"County\" = `CountyName`, \"Year\" = `ReportYear`) %>%\n  #pivoting so that each row is a year-county for merging data\n  pivot_wider(names_from = MeasureName, values_from = Value) %>%\n  #renaming Air Quality columns\n  rename(\"Ozone Days Delete\" = `Number of days with maximum 8-hour average ozone concentration over the National Ambient Air Quality Standard`,\n         \"Ozone Person Days Delete\" = `Number of person-days with maximum 8-hour average ozone concentration over the National Ambient Air Quality Standard`,\n         \"PM2.5 Percent of Days Delete\" = `Percent of days with PM2.5 levels over the National Ambient Air Quality Standard (NAAQS)`,\n         \"PM2.5 Person Days Delete\" = `Person-days with PM2.5 over the National Ambient Air Quality Standard`,\n         \"PM2.5 Annual Average Delete\" = `Annual average ambient concentrations of PM2.5 in micrograms per cubic meter (based on seasonal averages and daily measurement)`,\n         \"Ozone Days\" = `Number of days with maximum 8-hour average ozone concentration over the National Ambient Air Quality Standard (monitor and modeled data)`,\n         \"Ozone Person Days\" = `Number of person-days with maximum 8-hour average ozone concentration over the National Ambient Air Quality Standard (monitor and modeled data)`,\n         \"PM2.5 Percent of Days\" = `Percent of days with PM2.5 levels over the National Ambient Air Quality Standard (monitor and modeled data)`,\n         \"PM2.5 Person Days\" = `Number of person-days with PM2.5 over the National Ambient Air Quality Standard (monitor and modeled data)`,\n         \"PM2.5 Annual Average\" = `Annual average ambient concentrations of PM 2.5 in micrograms per cubic meter, based on seasonal averages and daily measurement (monitor and modeled data)`)\n\n#filling in modeled data for first year, where there is no modeled data\nairqualitycali <- airqualitycali %>%\n  mutate(`Ozone Days` = case_when(\n    `Year` == 2000 ~ `Ozone Days Delete`,\n    TRUE ~ as.numeric(as.character(`Ozone Days`)))) %>%\n  mutate(`Ozone Person Days` = case_when(\n    `Year` == 2000 ~ `Ozone Person Days Delete`,\n    TRUE ~ as.numeric(as.character(`Ozone Person Days`)))) %>%\n  mutate(`PM2.5 Percent of Days` = case_when(\n    `Year` == 2000  ~ `PM2.5 Percent of Days Delete`,\n    TRUE ~ as.numeric(as.character(`PM2.5 Percent of Days`)))) %>%\n  mutate(`PM2.5 Person Days` = case_when(\n    `Year` == 2000 ~ `PM2.5 Person Days Delete`,\n    TRUE ~ as.numeric(as.character(`PM2.5 Person Days`)))) %>%\n  mutate(`PM2.5 Annual Average` = case_when(\n    `Year` == 2000 ~ `PM2.5 Annual Average Delete`,\n    TRUE ~ as.numeric(as.character(`PM2.5 Annual Average`)))) %>%\n  select(!contains(\"Delete\"))\n\n#cleaning deaths data\ncalideathsclean <- calideaths %>%\n  #filtering for 2000-2010\n  filter(`Year` %in% c(2000:2010)) %>%\n  #filling in suppressed data\n  mutate(Count = case_when(\n    Annotation_Code == 1 ~ 0,\n    TRUE ~ as.numeric(as.character(Count)))) %>%\n  #de-selecting some unused columns\n  select(-Cause_Desc, -Annotation_Code, -Annotation_Desc) %>%\n  #focusing on relevant conditions\n  filter(Cause %in% c(\"ALL\", \"CLD\", \"HTD\")) %>%\n  rename(\"Deaths\" = `Count`) %>%\n  rename(\"Strata Name\" = `Strata_Name`)\n\n# cleaning population data\npopulationstidy <- populations %>%\n  filter(STNAME == \"California\" & CTYNAME != \"California\") %>%\n  separate(CTYNAME, into = c(\"County\", \"Delete\"), sep = \" County\") %>%\n  select(County, POPESTIMATE2000:POPESTIMATE2010, -CENSUS2010POP) %>%\n  rename(\"2000\" = POPESTIMATE2000,\n         \"2001\" = POPESTIMATE2001,\n         \"2002\" = POPESTIMATE2002,\n         \"2003\" = POPESTIMATE2003,\n         \"2004\" = POPESTIMATE2004,\n         \"2005\" = POPESTIMATE2005,\n         \"2006\" = POPESTIMATE2006,\n         \"2007\" = POPESTIMATE2007,\n         \"2008\" = POPESTIMATE2008,\n         \"2009\" = POPESTIMATE2009,\n         \"2010\" = POPESTIMATE2010) %>%\n  pivot_longer(col = c(`2000`:`2010`), names_to = \"Year\", values_to = \"Population\") %>%\n  mutate(`Year` = as.numeric(Year))\n\n#merging data\nairqualityanddeaths <- left_join(calideathsclean, airqualitycali, by = c(\"County\", \"Year\"))\nairqualityanddeaths <- left_join(airqualityanddeaths, populationstidy, by = c(\"County\", \"Year\"))\n\n#For the remaining missing air quality data not filled in by models in 2000, replacing NAs with zero, as they are all small rural counties that will skew means higher for 2000\nairqualityanddeaths <- airqualityanddeaths %>%\n  mutate(`Ozone Days` = replace_na(`Ozone Days`, 0),\n         `Ozone Person Days` = replace_na(`Ozone Person Days`, 0),\n         `PM2.5 Percent of Days` = replace_na(`PM2.5 Percent of Days`, 0),\n         `PM2.5 Person Days` = replace_na(`PM2.5 Person Days`, 0),\n         `PM2.5 Annual Average` = replace_na(`PM2.5 Annual Average`, 0)) %>%\n# Creating standardized deaths per 100,000 column\n  mutate(\"Deaths per 100,000\" = `Deaths`/`Population`*100000) %>%\n# Creating a raw PM2.5 Days column\n  mutate(\"PM2.5 Days\" = `PM2.5 Percent of Days`/100*365) %>%\n# Re-arranging\n  select(Year, County, Population, Strata, `Strata Name`, Cause, Deaths, `Deaths per 100,000`, `Ozone Days`, `Ozone Person Days`, `PM2.5 Days`, `PM2.5 Person Days`, `PM2.5 Percent of Days`, `PM2.5 Annual Average`) %>% \n# Turning Year into a date for ease of plotting time series'\n  mutate(Year = make_date(year=Year)) %>%\n  filter(County != \"Sierra\")\n```\n:::\n\n\n### Creating a Pared-down Data Frame for Project 1\n\nThe columns I'm mainly interested in are Deaths per 100,000 and PM2.5 Days. PM2.5 Days is defined as the number of days in a calendar year where PM2.5 levels (Particulate Matter less than 2.5 nm in diatmeter) exceeded the national average. Essentially, higher PM2.5 Days means there was worse air quality in that county during the year. Each observation is a county-year. The data ranges from 2000-2010 for the state of California.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npartonedata <- airqualityanddeaths %>%\n  filter(Strata == \"Total Population\" &\n           Cause == \"ALL\") %>%\n  select(Year, County, `Deaths per 100,000`, `PM2.5 Days`, Population)\nhead(partonedata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  Year       County    `Deaths per 100,000` `PM2.5 Days` Population\n  <date>     <chr>                    <dbl>        <dbl>      <dbl>\n1 2000-01-01 Alameda                   677.        26.6     1449840\n2 2000-01-01 Alpine                    910.         0          1209\n3 2000-01-01 Amador                    964.         0         35153\n4 2000-01-01 Butte                    1123.        47.9      203807\n5 2000-01-01 Calaveras                 664.         5.79      40645\n6 2000-01-01 Colusa                    648.         0         18817\n```\n:::\n:::\n\n\n## 1\n### a. Plotting PDFs and CDFs\n\nThere is clearly a greater density of PM2.5 days at or near 0 for the year. There is an extremely noticable right (positive) skew.\n\nThe Deaths per 100,000 data looks a bit closer to a normal distribution; however, there is some left (negative) skew.\n\n::: {.cell}\n\n```{.r .cell-code}\npartonedata %>%\n  ggplot(aes(`PM2.5 Days`)) +\n  geom_density() +\n  labs(title = \"PM2.5 Days PDF\",\n       x = \"PM2.5 Days\",\n       y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](Class_Project1_JosephVincent_New_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\npartonedata %>%\n  ggplot(aes(`PM2.5 Days`)) +\n  stat_ecdf(geom = \"step\") +\n  labs(title = \"PM2.5 Days CDF\",\n       x = \"PM2.5 Days\",\n       y = \"Cumulative Density\")\n```\n\n::: {.cell-output-display}\n![](Class_Project1_JosephVincent_New_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\npartonedata %>%\n  ggplot(aes(`Deaths per 100,000`)) +\n  geom_density() +\n  labs(title = \"Deaths per 100,000 PDF\",\n       x = \"Deaths per 100,000\",\n       y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](Class_Project1_JosephVincent_New_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n\n```{.r .cell-code}\npartonedata %>%\n  ggplot(aes(`Deaths per 100,000`)) +\n  stat_ecdf(geom = \"step\") +\n  labs(title = \"Deaths per 100,000 CDF\",\n       x = \"Deaths per 100,000\",\n       y = \"Cumulative Density\")\n```\n\n::: {.cell-output-display}\n![](Class_Project1_JosephVincent_New_files/figure-html/unnamed-chunk-4-4.png){width=672}\n:::\n:::\n\n\n### b. Mean and Standard Deviation of Variables, Grouped by Year\n\nMean Deaths per 100,000 and Mean PM2.5 Days both noticably decline throughout the decade when grouped by year, as seen in the table below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverages <- partonedata %>%\n  group_by(Year) %>%\n  summarise(MeanDeathsper100k = mean(`Deaths per 100,000`),\n            SDDeathsper100k = sd(`Deaths per 100,000`),\n            MeanPM2.5Days = mean(`PM2.5 Days`),\n            SDPM2.5Days = sd(`PM2.5 Days`),\n            MeanPopulation = mean(Population),\n            SDPopulatoin = sd(Population))\naverages\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11 × 7\n   Year       MeanDeathsper100k SDDeathsper100k MeanPM…¹ SDPM2…² MeanP…³ SDPop…⁴\n   <date>                 <dbl>           <dbl>    <dbl>   <dbl>   <dbl>   <dbl>\n 1 2000-01-01              746.            197.    20.1    26.3  596218.  1.36e6\n 2 2001-01-01              729.            218.    17.5    23.3  604841.  1.38e6\n 3 2002-01-01              728.            216.    22.0    21.4  611726.  1.39e6\n 4 2003-01-01              757.            211.     8.09   15.7  618415.  1.40e6\n 5 2004-01-01              703.            209.     9.66   12.5  624055.  1.41e6\n 6 2005-01-01              720.            218.    10.0    11.3  628501.  1.41e6\n 7 2006-01-01              717.            216.     8.33    9.51 631891.  1.40e6\n 8 2007-01-01              694.            217.    12.5    16.5  635911.  1.40e6\n 9 2008-01-01              709.            194.    17.2    12.2  642123.  1.41e6\n10 2009-01-01              683.            210.     5.67   10.1  648386.  1.42e6\n11 2010-01-01              688.            214.     2.67    5.91 655195.  1.43e6\n# … with abbreviated variable names ¹​MeanPM2.5Days, ²​SDPM2.5Days,\n#   ³​MeanPopulation, ⁴​SDPopulatoin\n```\n:::\n:::\n\n\n### c. Splitting Data by PM2.5 Days Greater or Less than Mean\n\nI chose to split my data by county-years greater or equal to the mean PM2.5 Days and county-years less than the mean PM2.5 Days.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPM2.5greaterthanmean <- partonedata %>%\n  filter(`PM2.5 Days` >= mean(`PM2.5 Days`))\n  \nPM2.5lessthanmean <- partonedata %>%\n  filter(`PM2.5 Days` < mean(`PM2.5 Days`))\n```\n:::\n\n\n### d. For Split Data, Finding Differences in Means, Standard Errors and Confidence Intervals\n#### Difference in Mean Deaths per 100,000\n\nSurprisingly, the mean Deaths per 100,000 rate for counties with greater PM2.5 days is about 40 less than the mean for counties with less PM2.5 days. I will explore this more below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Finding difference in Means\nmeangreater <- mean(PM2.5greaterthanmean$`Deaths per 100,000`)\nmeangreater\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 688.9798\n```\n:::\n\n```{.r .cell-code}\nmeanless <- mean(PM2.5lessthanmean$`Deaths per 100,000`)\nmeanless\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 728.2283\n```\n:::\n\n```{.r .cell-code}\nmeangreater - meanless\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -39.24847\n```\n:::\n:::\n\n\n#### Standard Error of Deaths per 100,000 when PM2.5 >= Mean\n\nThe standard error of Deaths per 100,000 for PM2.5 days greater than the mean is about 10.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculating Standard Error of Deaths per 100,000 when PM2.5 >= Mean\nStandarderrorPM2.5greater <- (sd(PM2.5greaterthanmean$`Deaths per 100,000`)/(sqrt(nrow(PM2.5greaterthanmean))))\nStandarderrorPM2.5greater\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10.07148\n```\n:::\n:::\n\n\n#### Confidence Interval of Deaths per 100,000 when PM2.5 >= Mean\n\nThe confidence interval ranges from the lower bound of around 669 to the upper bound of arround 709.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculating Confidence Interval\nlowergreater <- meangreater - 1.96 * StandarderrorPM2.5greater\nlowergreater\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 669.2397\n```\n:::\n\n```{.r .cell-code}\nuppergreater <- meangreater + 1.96 * StandarderrorPM2.5greater\nuppergreater\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 708.7199\n```\n:::\n:::\n\n\n#### Standard Error of Deaths per 100,000 when PM2.5 < Mean\n\nThe standard error of Deaths per 100,000 for PM2.5 days less than the mean is about 11. This is larger standard error than for the 'greater than mean' counties and contributes to the wider confidence interval as seen below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculating Standard Error of Deaths per 100,000 when PM2.5 < Mean\nStandarderrorPM2.5less <- (sd(PM2.5lessthanmean$`Deaths per 100,000`)/(sqrt(nrow(PM2.5lessthanmean))))\nStandarderrorPM2.5less\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11.34218\n```\n:::\n:::\n\n\n#### Confidence Interval of Deaths per 100,000 when PM2.5 < Mean\n\nThe confidence interval ranges from the lower bound of around 666 to the upper bound of arround 711.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculating Confidence Interval\nlowerless <- meangreater - 1.96 * StandarderrorPM2.5less\nlowerless\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 666.7492\n```\n:::\n\n```{.r .cell-code}\nupperless <- meangreater + 1.96 * StandarderrorPM2.5less\nupperless\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 711.2105\n```\n:::\n:::\n\n\n### e. Creating a Scatter Plot of All Data\n\nIt is clear from the scatter plot below that there is an extremely high variance in Deaths per 100,000 for counties with low, or zero, PM2.5 Days. Once past about 30 PM2.5 Days, there does appear to be a slight upward trend in death rate. I believe there is ommitted variable bias present, which I will explore more moving forward.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npartonedata %>%\n  ggplot(aes(x = `PM2.5 Days`, y = `Deaths per 100,000`)) +\n  geom_point() +\n  labs(title = \"PM2.5 Days vs Deaths per 100k\",\n       subtitle = \"Across all County-Years, CA, 2000-2010\",\n       x = \"PM 2.5 Days\",\n       y = \"Deaths per 100,000\")\n```\n\n::: {.cell-output-display}\n![](Class_Project1_JosephVincent_New_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## 2.\n### Performing Simple Regression Analysis on Entire Data Set\n\nSurprisingly, the beta estimator for PM2.5 days is -1.2, suggesting that for each additional PM2.5 Day in a year, a county is expected to have 1.2 less deaths per 100,000.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldatalm <- lm(formula = `Deaths per 100,000` ~ `PM2.5 Days`, data = partonedata)\nsummary(alldatalm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = `Deaths per 100,000` ~ `PM2.5 Days`, data = partonedata)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-730.43 -133.95  -15.82  133.68  580.06 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   730.427     10.273   71.10   <2e-16 ***\n`PM2.5 Days`   -1.206      0.490   -2.46   0.0141 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 209.6 on 625 degrees of freedom\nMultiple R-squared:  0.009593,\tAdjusted R-squared:  0.008008 \nF-statistic: 6.054 on 1 and 625 DF,  p-value: 0.01415\n```\n:::\n:::\n\n\n### a. Creating a Scatter Plot with a Linear Regression Line\n\nBelow, I've added this simple regression line to the scatter plot. Clearly, this is not the trend you would expect, and I believe there are a large number of variables missing from this analysis that might explain this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npartonedata %>%\n  ggplot(aes(x = `PM2.5 Days`, y = `Deaths per 100,000`)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"PM2.5 Days vs Deaths per 100k\",\n       subtitle = \"Across all County-Years, CA, 2000-2010\",\n       x = \"PM 2.5 Days\",\n       y = \"Deaths per 100,000\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Class_Project1_JosephVincent_New_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### Looking Ahead at Population As a Variable\n\nQuickly, I'll look ahead at what happens when you split counties by those greater or less than the mean for population. My theory is that small counties will have a large variance in death rate due to the sample size being much smaller. Additionally, there may be other factors at play that affect death rate for small, rural counties that I cannot account for here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPopgreaterthanmean <- partonedata %>%\n  filter(Population >= mean(Population))\n  \nPoplessthanmean <- partonedata %>%\n  filter(Population < mean(Population))\n```\n:::\n\n\n### Performing Simple Regression Analysis on Split Data\n\nThe beta estimator for PM2.5 Days is indeed positive when only looking at larger counties. This will need to be explored further. I've also plotted the scatter plots with regression lines below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPopgreaterlm <- lm(formula = `Deaths per 100,000` ~ `PM2.5 Days`, data = Popgreaterthanmean)\nsummary(Popgreaterlm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = `Deaths per 100,000` ~ `PM2.5 Days`, data = Popgreaterthanmean)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-107.803  -56.364   -0.728   34.238  206.137 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  650.7043     7.5990   85.63   <2e-16 ***\n`PM2.5 Days`   0.4769     0.2249    2.12   0.0355 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 67.74 on 159 degrees of freedom\nMultiple R-squared:  0.0275,\tAdjusted R-squared:  0.02138 \nF-statistic: 4.495 on 1 and 159 DF,  p-value: 0.03554\n```\n:::\n\n```{.r .cell-code}\nPoplesslm <- lm(formula = `Deaths per 100,000` ~ `PM2.5 Days`, data = Poplessthanmean)\nsummary(Poplesslm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = `Deaths per 100,000` ~ `PM2.5 Days`, data = Poplessthanmean)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-750.72 -165.05   13.89  179.67  583.93 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  750.7222    13.4077  55.992   <2e-16 ***\n`PM2.5 Days`  -2.0413     0.9552  -2.137   0.0331 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 237.1 on 464 degrees of freedom\nMultiple R-squared:  0.009747,\tAdjusted R-squared:  0.007613 \nF-statistic: 4.567 on 1 and 464 DF,  p-value: 0.03311\n```\n:::\n:::\n\n\n### Plotting Split Data with Regression Lines\n\n::: {.cell}\n\n```{.r .cell-code}\nPopgreaterthanmean %>%\n  ggplot(aes(x = `PM2.5 Days`, y = `Deaths per 100,000`)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"PM2.5 Days vs Deaths per 100k\",\n       subtitle = \"County-Years with Pop > Mean, CA, 2000-2010\",\n       x = \"PM 2.5 Days\",\n       y = \"Deaths per 100,000\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Class_Project1_JosephVincent_New_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nPoplessthanmean %>%\n  ggplot(aes(x = `PM2.5 Days`, y = `Deaths per 100,000`)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"PM2.5 Days vs Deaths per 100k\",\n       subtitle = \"County-Years with Pop < Mean, CA, 2000-2010\",\n       x = \"PM 2.5 Days\",\n       y = \"Deaths per 100,000\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Class_Project1_JosephVincent_New_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Class_Project1_JosephVincent_New_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
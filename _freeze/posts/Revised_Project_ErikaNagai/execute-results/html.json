{
  "hash": "c0bd9af09e1f7cf91ea62fcab9a38270",
  "result": {
    "markdown": "---\ntitle: \"Class Project 1\"\nauthor: \"Erika Nagai\"\ndesription: \"First iteration of the class project\"\ndate: \"07/18/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - final project\n  - Erika Nagai\n  - dplyr\neditor: \n  markdown: \n    wrap: 72\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Assignment 1: Instructions\n\n1.  Import data into R and load the `dplyr` package to perform the\n    following descriptive analysis on the two variables you are working\n    with:\n\n    i)  Start by first [plotting]{.underline} the probability as well as\n        cumulative density functions for each of your variables as shown\n        in chapter 2. Instead of using sample() to generate a vector of\n        probabilities, designate 'probability' to be the observations in\n        your dataset. You may search online for simple ways to generate\n        these plots for you data.\n\n    ii) Group data by the two variables of interest to you (and\n        relevance to the phenomenon you are interested in exploring) and\n        obtain mean and standard deviation for at least one of the\n        variables like in the example below. Please also print your\n        results, as they will be important for your final writeup.\n\n    ![](images_Qasim/image1.png){fig-align=\"center\"}\n\n    iii) Split both of your variables like illustrated in the example\n         below. You may use 'greater than' or 'less than' signs to split\n         your data\n\n    ![](images_Qasim/image2.png){fig-align=\"center\"}\n\n    iv) Rename columns according to the splits you've made and obtain\n        difference in means along with standard errors and confidence\n        intervals like so:\n\n    ![](images_Qasim/image3.png){fig-align=\"center\"}\n\n    v)  Now generate a plot by first designating X and Y according to\n        the variable you would assign as an independent variable\n        (regressor or X) and which one as a dependent variable (Y) like\n        so:\n\n    ![](images_Qasim/image4.png){fig-align=\"center\"}\n\n2.  Carry out simple regression analysis that employs lm() function to\n    generate results for the analysis\n\n    i)  Generate plot that regresses you X variable on Y. Fit a line\n        through the observations to capture the systematic relationship:\n\n    ![](images_Qasim/image5.png){fig-align=\"center\"}\n\n## Overview:\n\nThis analysis was done for in-class assignment for DACSS 603\nIntroduction to Quantitative Analysis at the University of\nMassachusetts, Amherst.\n\nMy analysis is about Japanese moviegoers' behavior and trend over last\n20 years. As this article\n(https://www.washingtonpost.com/business/avatar-struggles-show-how-japan-is-ditching-hollywood/2022/12/22/09197536-8234-11ed-8738-ed7217de2775_story.html)\nsuggests, recent Hollywood movies are struggling in Japanese market.\nThis might suggest that Japanese people are favoring domestic movies\nbecause they are getting more close-minded or Japanese movie industry is\ngetting mature and more attractive for Japanese audience.\n\nMy research questions are:\n\n1.  How has Japanese moviegoers' behavior changed over 20 years?\n2.  What kind of movies attract Japanese movies?\n\n## Dataset\n\nI used two datasets from two different sources. 1. By-year dataset\n(`year`) I gathered the data about general information (total box office\nrevenue, total \\# of people who went to movie theaters, \\# of screens)\nof every year from 2000 to 2022.\n(http://www.eiren.org/statistics_e/index.html)\n\n2.  By-movie dataset ('ranking') I gatehrered the data of Top 100 movies\n    in box office revenue in Japan for the last 20 years (2002-2022) by\n    scraping data available on Box Office Mojo by IMDbPro\n    (https://www.boxofficemojo.com/year/2022/?area=JP&grossesOption=totalGrosses&sort=rank&sortDir=asc)\n    \\* 2022 should be changed to the year you want to refer to.\n\nThen, I added more detailed information about the movies using the\ndataset of movies available on TMdb\n(https://www.kaggle.com/datasets/akshaypawar7/millions-of-movies) as of\nJuly 14th, 2023 to complement useful information on movies' language and\ngenres.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(dplyr)\nlibrary(ggplot2)\n#install.packages(\"tidyverse\")\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in data\nranking <- read_csv(\"data_ErikaNagai/merged_ranking.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3463 Columns: 35\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (17): original_title, release_date, distributor, revised_release_date, r...\ndbl (17): year, rank, gross, total_gross, order, release_year, id, JP_releas...\nlgl  (1): re_released\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Filter top 100 movies of each year\nranking <- ranking %>% filter(rank <= 100)\nranking <- ranking %>% arrange(gross)\n\nstr(ranking)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspc_tbl_ [2,100 × 35] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ year                : num [1:2100] 2002 2021 2021 2002 2021 ...\n $ rank                : num [1:2100] 100 100 99 99 98 98 100 97 99 97 ...\n $ original_title      : chr [1:2100] \"The Mothman Prophecies\" \"Jump!!: The Heroes Behind The Gold\" \"Last Night in Soho\" \"Tsuribaka nisshi 13: Hama-chan kiki ippatsu!\" ...\n $ gross               : num [1:2100] 372582 459302 467896 475889 493487 ...\n $ total_gross         : num [1:2100] 372582 625915 1370000 2678868 1084503 ...\n $ release_date        : chr [1:2100] \"2-Nov\" \"18-Jun\" \"10-Dec\" \"10-Aug\" ...\n $ distributor         : chr [1:2100] \"-\" \"-\" \"-\" \"-\" ...\n $ order               : num [1:2100] 1 1 1 1 1 1 1 1 1 1 ...\n $ revised_release_date: chr [1:2100] \"11/2/2002 0:00\" \"6/18/2021 0:00\" \"12/10/2021 0:00\" \"8/10/2002 0:00\" ...\n $ release_year        : num [1:2100] 2002 2021 2021 2002 2021 ...\n $ revised_title       : chr [1:2100] \"themothmanprophecies\" \"jump!!:theheroesbehindthegold\" \"lastnightinsoho\" \"tsuribakanisshi13:hama-chankikiippatsu!\" ...\n $ re_released         : logi [1:2100] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ id                  : num [1:2100] 99 3281 3280 98 3279 ...\n $ JP_release_date     : chr [1:2100] \"11/2/2002 0:00\" \"6/18/2021 0:00\" \"12/10/2021 0:00\" \"8/10/2002 0:00\" ...\n $ JP_release_year     : num [1:2100] 2002 2021 2021 2002 2021 ...\n $ id_movies           : num [1:2100] 99 3281 3280 98 3279 ...\n $ id_tmdb             : num [1:2100] 2637 NA 576845 NA NA ...\n $ title               : chr [1:2100] \"The Mothman Prophecies\" NA \"Last Night in Soho\" NA ...\n $ genres              : chr [1:2100] \"Drama,Horror,Mystery\" NA \"Horror,Mystery,Thriller\" \"Drama\" ...\n $ original_language   : chr [1:2100] \"en\" NA \"en\" \"ja\" ...\n $ overview            : chr [1:2100] \"Reporter John Klein is plunged into a world of impossible terror and unthinkable chaos when fate draws him to a\"| __truncated__ NA \"A young girl passionate about fashion design is mysteriously able to enter the 1960s where she encounters her i\"| __truncated__ NA ...\n $ popularity          : num [1:2100] 15.8 NA 37.7 NA NA ...\n $ production_companies: chr [1:2100] \"Lakeshore Entertainment-Screen Gems\" NA \"Film4 Productions-Working Title Films-Complete Fiction-Universal Pictures\" NA ...\n $ budget              : num [1:2100] 3.2e+07 NA 4.3e+07 NA NA 7.2e+07 2.5e+07 0.0 1.2e+07 NA ...\n $ global_revenue      : num [1:2100] 55305279 NA 22957625 NA NA ...\n $ runtime             : num [1:2100] 119 NA 117 NA NA 131 137 118 90 NA ...\n $ status              : chr [1:2100] \"Released\" NA \"Released\" NA ...\n $ tagline             : chr [1:2100] \"What do you see?\" NA \"When the past lets you in, the truth will come out.\" NA ...\n $ vote_average        : num [1:2100] 6.2 NA 7.4 NA NA ...\n $ vote_count          : num [1:2100] 925 NA 2364 NA NA ...\n $ credits             : chr [1:2100] \"Richard Gere-Laura Linney-Will Patton-Debra Messing-David Eigenberg-Alan Bates-Lucinda Jenney-Nesbitt Blaisdell\"| __truncated__ NA \"Thomasin McKenzie-Anya Taylor-Joy-Matt Smith-Rita Tushingham-Michael Ajao-Synnøve Karlsen-Pauline McLynn-Terenc\"| __truncated__ NA ...\n $ keywords            : chr [1:2100] \"based on novel or book-small town-dream-motel-hallucination-bridge-omen-warning-tumor-west virginia-urban legen\"| __truncated__ NA \"london england-go-go dancer-nightmare-time travel-nostalgia-fashion designer-murder-grindhouse-soho london-clai\"| __truncated__ NA ...\n $ date_difference     : chr [1:2100] \"281 days 00:00:00\" NA \"50 days\" NA ...\n $ region              : chr [1:2100] \"Foreign\" \"Unknown\" \"Foreign\" \"Japan\" ...\n $ anime               : num [1:2100] 0 1 0 0 1 0 0 0 0 1 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   year = col_double(),\n  ..   rank = col_double(),\n  ..   original_title = col_character(),\n  ..   gross = col_double(),\n  ..   total_gross = col_double(),\n  ..   release_date = col_character(),\n  ..   distributor = col_character(),\n  ..   order = col_double(),\n  ..   revised_release_date = col_character(),\n  ..   release_year = col_double(),\n  ..   revised_title = col_character(),\n  ..   re_released = col_logical(),\n  ..   id = col_double(),\n  ..   JP_release_date = col_character(),\n  ..   JP_release_year = col_double(),\n  ..   id_movies = col_double(),\n  ..   id_tmdb = col_double(),\n  ..   title = col_character(),\n  ..   genres = col_character(),\n  ..   original_language = col_character(),\n  ..   overview = col_character(),\n  ..   popularity = col_double(),\n  ..   production_companies = col_character(),\n  ..   budget = col_double(),\n  ..   global_revenue = col_double(),\n  ..   runtime = col_double(),\n  ..   status = col_character(),\n  ..   tagline = col_character(),\n  ..   vote_average = col_double(),\n  ..   vote_count = col_double(),\n  ..   credits = col_character(),\n  ..   keywords = col_character(),\n  ..   date_difference = col_character(),\n  ..   region = col_character(),\n  ..   anime = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n:::\n\n\n## EDA (1st Homework)\n\nThis dataset contains 3219 rows (movies) that were among top 148 movies\nwith the highest box office revenues in Japan every year between 2002\nand 2022.\n\nIt contains basic information about movies such as total gross box\noffice revenue, release date in Japan, original language, genres, and\nsome movies have their tagline as well\n\n**Instruction a**. Start by first plotting the probability as well as\ncumulative density functions for each of your variables as shown in\nchapter 2. Instead of using sample() to generate a vector of\nprobabilities, designate 'probability' to be the observations in your\ndataset. You may search online for simple ways to generate these plots\nfor you data.\n\nThe below is a probability of a movie having a specific value. As the\nprobability of a moving having a specific value is quite low (close to\n0), the plot looks flat.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# probability density of Box Office revenue in Japan \n\n\nprobability <- rep(1/nrow(ranking), nrow(ranking))\n\nplot(x = ranking$gross,\n     y = probability,\n     main = 'Probability Distribution Function',\n     xlab = 'Total Box Office Revenue in Japan (USD)',\n     ylab = 'Probability')\n```\n\n::: {.cell-output-display}\n![](Revised_Project_ErikaNagai_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncum_probability <- cumsum(probability)\nplot(x = ranking$gross,\n     y = cum_probability,\n     main = 'Cumulative Probability Distribution Function',\n     xlab = 'Total Box Office Revenue in Japan (USD)',\n     ylab = 'Cumulative Probability')\n```\n\n::: {.cell-output-display}\n![](Revised_Project_ErikaNagai_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**Instruction b**. Group data by the two variables of interest to you\n(and relevance to the phenomenon you are interested in exploring) and\nobtain mean and standard deviation for at least one of the variables\nlike in the example below. Please also print your results, as they will\nbe important for your final writeup.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(summary(ranking$gross))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n   372582   4367666   7903902  14270108  16545126 317074514 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(sd(ranking$gross))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 19547355\n```\n:::\n:::\n\n\n**Introduction c**. Split both of your variables like illustrated in the\nexample below. You may use 'greater than' or 'less than' signs to split\nyour data\n\n## Statistics description of box office revenue of **foreign movies in Japan**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranking_foreign <- ranking %>% \n  filter(region == \"Foreign\")\n\nsummary(ranking_foreign$gross)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n   372582   4146751   7744522  14516712  16715569 246836412 \n```\n:::\n:::\n\n\nStandard deviation of box office revenue of foreign movies in Japan\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(ranking_foreign$gross)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 19772984\n```\n:::\n:::\n\n\n## Statistics description of box office revenue of **domestic movies in Japan**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranking_domestic <- ranking %>% \n  filter(region == \"Japan\")\n\nsummary(ranking_domestic$gross)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n   475889   4848089   8685663  15277871  18327968 317074514 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(ranking_domestic$gross)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20909788\n```\n:::\n:::\n\n\n**Instruction d.** Rename columns according to the splits you've made\nand obtain difference in means along with standard errors and confidence\nintervals like so:\n\nThe mean of Box Office revenue of domestic movies are bigger than that\nof foreign movies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Difference in means\ngap_mean <- mean(ranking_domestic$gross) - mean(ranking_foreign$gross)\n\ngap_se <- sqrt(ranking_domestic$gross/count(ranking_domestic) + ranking_foreign$gross/count(ranking_domestic))\n\ngap_ci_l <- gap_mean - 1.96 * gap_se\ngap_ci_u <- gap_mean + 1.96 * gap_se\n\nresults = cbind(gap_mean, gap_se, gap_ci_l, gap_ci_u)\ncolnames(results) <- c(\"gap_mean\", \"gap_se\", \"gap_ci_l\", \"gap_ci_u\")\nprint(results)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  gap_mean   gap_se gap_ci_l gap_ci_u\n1 761159.7 30.33563 761100.3 761219.2\n```\n:::\n:::\n\n\n**Instruction e.** assign as an independent variable (regressor or X)\nand which one as a dependent variable (Y) like so:\n\nMy independent variable (foreign/domestic) is a discrete variable, so I\nused histogram instead to show the difference of distribution between\nforeign movies and domestic movies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranking %>%\n  ggplot(aes(x = gross)) +\n  geom_histogram(bins=50, fill='lightblue') +\n  facet_wrap(~region) +\n  labs(title=\"Distribution of Box Office Revenue in Japan\",\n       x = \"Box Office Revenue in Japan (USD\")\n```\n\n::: {.cell-output-display}\n![](Revised_Project_ErikaNagai_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n**Instruction.** Carry out simple regression analysis that employs lm()\nfunction to generate results for the analysis a. Generate plot that\nregresses you X variable on Y. Fit a line through the observations to\ncapture the systematic relationship:\n\nMy independent variable is discrete so the linear regression (box office\nrevenue \\~ region) used dummy variables.\n\nThis regression model basically shows the mean box office revenue by\nmovie regions (unknown, foreign, japan). On average, both Foreign and\nJapanese movies are likely to make statistically higher box office\nrevenue than movies whose original region is unknown.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranking$region <- factor(ranking$region, levels=c(\"Unknown\", \"Foreign\", \"Japan\"))\nmodel <- lm(ranking$gross~ ranking$region)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = ranking$gross ~ ranking$region)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-14801982 -10177589  -5844492   2274717 301796643 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(>|t|)    \n(Intercept)            8478805    1369321   6.192 7.13e-10 ***\nranking$regionForeign  6037906    1504364   4.014 6.19e-05 ***\nranking$regionJapan    6799066    1511899   4.497 7.27e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 19460000 on 2097 degrees of freedom\nMultiple R-squared:  0.009689,\tAdjusted R-squared:  0.008744 \nF-statistic: 10.26 on 2 and 2097 DF,  p-value: 3.687e-05\n```\n:::\n:::\n\n\nSince my independent variable is NOT continuous, it is difficult to plot\nthe regression model. Thus, I prepared the boxplot graph that show the\ndifference in box offixe revenue depending on the regional origin of the\nmovies (Unknown, Foreign, Japan)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ranking$gross ~ ranking$region)\n```\n\n::: {.cell-output-display}\n![](Revised_Project_ErikaNagai_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## For Final Project\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranking %>% \n  ggplot(aes(x=JP_release_year, y=gross, color = region)) +\n  geom_point() +\n  labs(x='Release Year in Japan', y='Total Box Office Revenue in Japan (USD)')\n```\n\n::: {.cell-output-display}\n![](Revised_Project_ErikaNagai_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## Anime\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranking$anime <- as.factor(ranking$anime)\n\nranking %>% \n  ggplot(aes(x=JP_release_year, y=gross, color = anime)) +\n  geom_point() +\n  labs(x='Release Year in Japan', y='Total Box Office Revenue in Japan (USD)')\n```\n\n::: {.cell-output-display}\n![](Revised_Project_ErikaNagai_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Anime X Region\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranking %>% \n  ggplot(aes(x=JP_release_year, y=gross, color = region, shape = anime)) +\n  geom_point() +\n  labs(x='Release Year in Japan', y='Total Box Office Revenue in Japan (USD)')\n```\n\n::: {.cell-output-display}\n![](Revised_Project_ErikaNagai_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n# Linear Regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranking_first_half <- ranking %>% filter(JP_release_year <= 2011)\nranking_second_half <- ranking %>% filter(JP_release_year >=2012)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_first_half <- lm(gross~region+anime, data = ranking_first_half)\nsummary(lm_first_half)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = gross ~ region + anime, data = ranking_first_half)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-17015604 -10276484  -6007758   2373470 146705641 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    7320068    2509241   2.917 0.003610 ** \nregionForeign  7230675    2538355   2.849 0.004481 ** \nregionJapan    8353921    2394906   3.488 0.000507 ***\nanime1         2021838    1607606   1.258 0.208802    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 18580000 on 1008 degrees of freedom\nMultiple R-squared:  0.01205,\tAdjusted R-squared:  0.009111 \nF-statistic: 4.099 on 3 and 1008 DF,  p-value: 0.006641\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_second_half <- lm(gross~region+anime, data = ranking_second_half)\nsummary(lm_second_half)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = gross ~ region + anime, data = ranking_second_half)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-22165496  -8714623  -4789122   2224627 296428302 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -2075389    2418061  -0.858    0.391    \nregionForeign 15023841    2494068   6.024 2.33e-09 ***\nregionJapan   12903814    2281825   5.655 1.99e-08 ***\nanime1         9817787    1492365   6.579 7.37e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 19860000 on 1084 degrees of freedom\nMultiple R-squared:  0.04772,\tAdjusted R-squared:  0.04509 \nF-statistic: 18.11 on 3 and 1084 DF,  p-value: 1.805e-11\n```\n:::\n:::\n\n\n# \\-\\-\\-- For Final Project ----\n\n## Overview:\n\nThis analysis was done for in-class assignment for DACSS 603\nIntroduction to Quantitative Analysis at the University of\nMassachusetts, Amherst.\n\nMy analysis is about Japanese moviegoers' behavior and trend over last\n20 years. As this\n[article](https://www.washingtonpost.com/business/avatar-struggles-show-how-japan-is-ditching-hollywood/2022/12/22/09197536-8234-11ed-8738-ed7217de2775_story.html)\nsuggests, recent Hollywood movies are struggling in Japanese market.\nThis might suggest that Japanese people are favoring domestic movies\nbecause they are getting more close-minded or Japanese movie industry is\ngetting mature and more attractive for Japanese audience.\n\nMy research questions are:\n\n1.  **How has Japanese moviegoers' behavior changed over 20 years?**\n2.  **What kind of movies attract Japanese movies?**\n\n## Dataset\n\nI used two datasets from two different sources. 1. By-year dataset\n(`year`) I gathered the data about general information (total box office\nrevenue, total \\# of people who went to movie theaters, \\# of screens)\nof every year from 2000 to 2022.\n(<http://www.eiren.org/statistics_e/index.html>)\n\n2.  By-movie dataset ('ranking') I gatehrered the data of Top 100 movies\n    in box office revenue in Japan for the last 20 years (2002-2022) by\n    scraping data available on Box Office Mojo by IMDbPro\n    (<https://www.boxofficemojo.com/year/2022/?area=JP&grossesOption=totalGrosses&sort=rank&sortDir=asc>)\n\n    2022 should be changed to the year you want to refer to.\n\nThen, I added more detailed information about the movies using the\ndataset of movies available on TMdb\n(<https://www.kaggle.com/datasets/akshaypawar7/millions-of-movies>) as\nof July 14th, 2023 to complement useful information on movies' language\nand genres.\n\n## Description of dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in data\n\nyear <- read_csv(\"data_ErikaNagai/revised_year.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 23 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(15): ...1, year, total_screens, jp_movies, foreign_movies, total_movies...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nranking <- read_csv(\"data_ErikaNagai/merged_ranking.csv\") %>% filter(rank <=100)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3463 Columns: 35\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (17): original_title, release_date, distributor, revised_release_date, r...\ndbl (17): year, rank, gross, total_gross, order, release_year, id, JP_releas...\nlgl  (1): re_released\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyear\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 × 15\n    ...1  year total_screens jp_movies foreign_movies total_movies moviegoers\n   <dbl> <dbl>         <dbl>     <dbl>          <dbl>        <dbl>      <dbl>\n 1     0  2000          1123       282            362          644     135390\n 2     1  2001          1259       281            349          630     163280\n 3     2  2002          1396       293            347          640     160767\n 4     3  2003          1533       287            335          622     162347\n 5     4  2004          1766       310            339          649     170092\n 6     5  2005          1954       356            375          731     160453\n 7     6  2006          2230       417            404          821     164585\n 8     7  2007          2454       407            403          810     163193\n 9     8  2008          2659       418            388          806     160491\n10     9  2009          2723       448            314          762     169297\n# ℹ 13 more rows\n# ℹ 8 more variables: ticket_price <dbl>, jp_revenue <dbl>,\n#   foreign_revenue <dbl>, total_revenue <dbl>, jp_share <dbl>,\n#   foreign_share <dbl>, cinecons_screens <dbl>, non_cinecons_screens <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nranking\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,100 × 35\n    year  rank original_title   gross total_gross release_date distributor order\n   <dbl> <dbl> <chr>            <dbl>       <dbl> <chr>        <chr>       <dbl>\n 1  2002     1 Star Wars: Epi… 7.82e7    78182528 13-Jul       -               1\n 2  2002     2 Monsters, Inc.  7.44e7    74437612 2-Mar        -               1\n 3  2002     3 The Lord of th… 6.91e7    69140370 2-Mar        -               1\n 4  2002     4 Harry Potter a… 6.76e7   142786414 23-Nov       -               1\n 5  2003     7 Harry Potter a… 3.49e7   142786414 23-Nov       -               2\n 6  2002     5 Spider-Man      5.89e7    58925689 11-May       -               1\n 7  2002     6 The Cat Returns 5.06e7    50590057 20-Jul       -               1\n 8  2002     7 Harry Potter a… 4.85e7   152993493 1-Dec        -               1\n 9  2002     8 Ocean's Eleven  3.99e7    51987627 2-Feb        -               1\n10  2002     9 Men in Black II 2.81e7    28136247 6-Jul        -               1\n# ℹ 2,090 more rows\n# ℹ 27 more variables: revised_release_date <chr>, release_year <dbl>,\n#   revised_title <chr>, re_released <lgl>, id <dbl>, JP_release_date <chr>,\n#   JP_release_year <dbl>, id_movies <dbl>, id_tmdb <dbl>, title <chr>,\n#   genres <chr>, original_language <chr>, overview <chr>, popularity <dbl>,\n#   production_companies <chr>, budget <dbl>, global_revenue <dbl>,\n#   runtime <dbl>, status <chr>, tagline <chr>, vote_average <dbl>, …\n```\n:::\n:::\n\n\n### Are Japanese people watching more movies recently?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyear <- year %>% select(-('...1'))\nyear %>% \n  select(star)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `select()`:\n! Can't subset columns that don't exist.\n✖ Column `star` doesn't exist.\n```\n:::\n:::\n",
    "supporting": [
      "Revised_Project_ErikaNagai_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
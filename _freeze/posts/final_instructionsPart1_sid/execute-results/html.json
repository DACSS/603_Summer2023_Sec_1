{
  "hash": "9e6b17260ba153f8aaa89035963a5fd5",
  "result": {
    "markdown": "---\ntitle: \"Final Instructions Part 1\"\nauthor: \"Sidharth\"\ndesription: \"Anything you wanna write\"\ndate: \"08/02/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - final instruction\n  - sidharth\n  - dataset\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Instructions\n\nIn this question you need to this this this\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(2,3,4,5)\nmean(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.5\n```\n:::\n:::\n\n\n## Rendering your post\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. \n\n:::{.callout-warning}\nBe sure that you have moved your `*.qmd` file into the `posts` folder **BEFORE** you render it, so that all files are stored in the correct location.\n:::\n\n:::{.callout-important}\nOnly render a single file - don't try to render the whole website!\n:::\n\n:::{.callout-note}\n## Pilot Student Blogs\n\nWe are piloting a workflow including individual student websites with direted and limited pull requests back to course blogs. Please let us know if you would like to participate.\n:::\n\n## Reading in data files\n\nThe easiest data source to use - at least initially - is to choose something easily accessible, either from our `_data` folder provided, or from an online source that is publicly available.\n\n:::{.callout-tip}\n## Using Other Data\nIf you would like to use a source that you have access to and it is small enough and you don't mind making it public, you can copy it into the `_data` file and include in your *commit* and *pull request*.\n:::\n\n:::{.callout-tip}\n## Using Private Data\n\nIf you would like to use a proprietary source of data, that should be possible using the same process outlined above. There may initially be a few issues. We hope to have this feature working smoothly soon!\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
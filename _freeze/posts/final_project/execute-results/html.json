{
  "hash": "cc9d8bee8744652e2524472de911f3b3",
  "result": {
    "markdown": "---\ntitle: \"Class Project 2\"\nauthor: \"Erika Nagai\"\ndesription: \"Class Project 2\"\ndate: \"08/15/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - final project\n  - Erika Nagai\n  - dplyr\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\n#install.packages(\"gridExtra\")\nlibrary(gridExtra)\nlibrary(AER)\nlibrary(stargazer)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Overview:\n\nThis analysis was done for in-class assignment for DACSS 603 Introduction to Quantitative Analysis at the University of Massachusetts, Amherst.\n\nMy analysis is about Japanese moviegoers' behavior and trend over last 20 years. As this article (https://www.washingtonpost.com/business/avatar-struggles-show-how-japan-is-ditching-hollywood/2022/12/22/09197536-8234-11ed-8738-ed7217de2775_story.html) suggests, recent Hollywood movies are struggling in Japanese market. This might suggest that Japanese people are favoring domestic movies because they are getting more close-minded or Japanese movie industry is getting mature and more attractive for Japanese audience.\n\nMy research questions are:\n\nHow has Japanese moviegoers' behavior changed over 20 years?\n\nWhat kind of movies attract Japanese movies?\n\n## Dataset\n\nI used two datasets from two different sources.\n\n1.  By-year dataset (year) I gathered the data about general information (total box office revenue, total \\# of people who went to movie theaters, \\# of screens) of every year from 2000 to 2022. (http://www.eiren.org/statistics_e/index.html)\n\n2.  By-movie dataset ('ranking') I gathered the data of Top 100 movies in box office revenue in Japan for the last 20 years (2002-2022) by scraping data available on Box Office Mojo by IMDbPro (https://www.boxofficemojo.com/year/2022/?area=JP&grossesOption=totalGrosses&sort=rank&sortDir=asc) \\* 2022 should be changed to the year you want to refer to.\n\nThen, I added more detailed information about the movies using the dataset of movies available on TMdb (https://www.kaggle.com/datasets/akshaypawar7/millions-of-movies) as of July 14th, 2023 to complement useful information on movies' language and genres.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyear <- read_csv(\"data_ErikaNagai/revised_year.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 23 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(15): ...1, year, total_screens, jp_movies, foreign_movies, total_movies...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nranking <- read_csv(\"data_ErikaNagai/merged_ranking.csv\") %>% \n  filter(rank <=100) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3463 Columns: 35\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (17): original_title, release_date, distributor, revised_release_date, r...\ndbl (17): year, rank, gross, total_gross, order, release_year, id, JP_releas...\nlgl  (1): re_released\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nranking$anime <- as.factor(ranking$anime)\n```\n:::\n\n\n\n## Instructions\n\n1. **Write down multiple regression models as discussed in the lab. Please view the recordings for instructions on multicollinearity checks and OVB reduction as it pertains to model specification.** \n\n2. **Upon writing your models, please follow the following steps that make your model-building strategy lends to both internal and external validity**\n\n    a. The first step toward obtaining valid results is to get summary statistics for the data you are working with:\n    \n        *     data(\"MASchools\")\n        *     summary(MASchools)\n    b. Customize your variables like so:\n    \n        *     MASchools$score <- MASchools$score4 \n        *     MASchools$STR <- MASchools$stratio\n    c. Designate your regressors and report their mean and standard deviation:\n    \n        *     vars <- c(\"score\", \"STR\", \"english\", \"lunch\", \"income\")\n        *     cbind(MA_mean = sapply(MASchools[, vars], mean),\n                  MA_sd   = sapply(MASchools[, vars], sd))\n    d. Estimate a basic linear equation and report summary:\n    \n        *     Linear_model_MA <- lm(score ~ income, data = MASchools)\n        *     Linear_model_MA\n\n    e. Estimate a basic linear equation and report summary:\n        *     Linear_model_MA <- lm(score ~ income, data = MASchools)\n        *     Linear_model_MA\n    f. Attempt a log-linear model like so:\n        *     Linearlog_model_MA <- lm(score ~ log(income), data = MASchools) \n        *     Linearlog_model_MA\n    g. Now attempt a cubic model:\n        *     cubic_model_MA <- lm(score ~ I(income) + I(income^2) + I(income^3), data = MASchools)\n        *     cubic_model_MA\n    h. Plot the observations and add the linear, log-linear, as well as the cubic model like so:\n    \n        *     plot(MASchools$income, MASchools$score,\n                pch = 20,\n                col = \"steelblue\",\n                xlab = \"District income\",\n                ylab = \"Test score\",\n                xlim = c(0, 50),\n                ylim = c(620, 780))\n        *     abline(Linear_model_MA, lwd = 2)\n        *     order_id  <- order(MASchools$income)\n        *     lines(MASchools$income[order_id],\n                fitted(Linearlog_model_MA)[order_id], \n                col = \"darkgreen\", \n                lwd = 2)\n        *     lines(x = MASchools$income[order_id], \n                y = fitted(cubic_model_MA)[order_id],\n                col = \"orange\", \n                lwd = 2)\n        *     legend(\"topleft\",\n                legend = c(\"Linear\", \"Linear-Log\", \"Cubic\"),\n                lty = 1,\n                col = c(\"Black\", \"darkgreen\", \"orange\"))\n\n2. **Explain if, visually speaking, a non-linear equation explains the relationship better than a linear model. Explain why, and how the visual plot influences your model specification strategy. Write an explanation that’s at least two paragraphs long.**  \n\n3. **Now find the best model specification through the following steps:**\n\n    a. Estimate multiple specifications that help address your research question like so:\n    \n        *     TestScore_MA_mod1 <- lm(score ~ STR, data = MASchools)\n        *     TestScore_MA_mod2 <- lm(score ~ STR + english + lunch + log(income), \n                        data = MASchools)\n        *     TestScore_MA_mod3 <- lm(score ~ STR + english + lunch + income + I(income^2) + I(income^3), data = MASchools)\n        *     TestScore_MA_mod4 <- lm(score ~ STR + I(STR^2) + I(STR^3) + english + lunch + income + I(income^2) + I(income^3), data = MASchools)\n        *     TestScore_MA_mod5 <- lm(score ~ STR + HiEL + I(income^2) + I(income^3) + HiEL:STR + lunch + income, data = MASchools)\n        *     TestScore_MA_mod6 <- lm(score ~ STR + I(income^2) + I(income^3)+ lunch + income, data = MASchools)\n\n    b. Obtain robust standard errors for each of your models like so:\n    \n        *     rob_se <- list(sqrt(diag(vcovHC(TestScore_MA_mod1, type = \"HC1\"))),\n               sqrt(diag(vcovHC(TestScore_MA_mod2, type = \"HC1\"))),\n               sqrt(diag(vcovHC(TestScore_MA_mod3, type = \"HC1\"))),\n               sqrt(diag(vcovHC(TestScore_MA_mod4, type = \"HC1\"))),\n               sqrt(diag(vcovHC(TestScore_MA_mod5, type = \"HC1\"))),\n               sqrt(diag(vcovHC(TestScore_MA_mod6, type = \"HC1\"))))\n    c. Using stargazer, report the results of your models like the following:\n    \n        *     library(stargazer)\n        *     stargazer(TestScore_MA_mod1, TestScore_MA_mod2, TestScore_MA_mod3, \n                TestScore_MA_mod4, TestScore_MA_mod5, TestScore_MA_mod6,\n                title = \"Regressions Using Massachusetts Test Score Data\",\n                type = \"latex\",\n                digits = 3,\n                header = FALSE,\n                se = rob_se,\n                object.names = TRUE,\n                model.numbers = FALSE,\n                column.labels = c(\"(I)\", \"(II)\", \"(III)\", \"(IV)\", \"(V)\", \"(VI)\"))\n    d. Now carry out a linear hypothesis test (F-Test) for EACH of your models by using the following example:\n    \n        *     linearHypothesis(TestScore_MA_mod3, \n                 c(\"I(income^2)=0\", \"I(income^3)=0\"), \n                 vcov. = vcovHC(TestScore_MA_mod3, type = \"HC1\"))\n\n4. **Explain which robust model best explains the relationship you’ve set out to investigate. Communicate your ideas so you can add them to a professional report. Think of your ideal employer. What would they want to know about your model? How would you go about interpreting the results, including the  coefficients? Write several paragraphs that you might make part of a professional report—one that explains how your preferred model yields valid results both internally and externally in light of what you’ve earned in Chapter 9**\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}